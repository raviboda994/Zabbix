zabbix_export:
  version: '7.0'
  template_groups:
    - uuid: 78b891b0d95949c59790f292383778cd
      name: 'Basic Linux Docker Monitoring'
  templates:
    - uuid: b7fa5de6bbbd4a37a72aaee50454fcdc
      template: 'Basic Docker Linux Metrics'
      name: 'Basic Docker Linux Metrics'
      description: |
        Get Docker engine metrics from plugin for the New Zabbix Agent (zabbix-agent2).
        
        You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback/435429-discussion-thread-for-official-zabbix-template-docker
        
        Generated by official Zabbix template tool "Templator"
      groups:
        - name: 'Basic Linux Docker Monitoring'
      items:
        - uuid: 1ac4a9a1693945518f7d114da95ab8c4
          name: 'Get containers'
          key: docker.containers
          history: '0'
          value_type: TEXT
          tags:
            - tag: component
              value: raw
        - uuid: dfbe83a46b094b6295ef08f0bb8e436f
          name: 'Containers paused'
          type: DEPENDENT
          key: docker.containers.paused
          description: 'Total number of containers paused on this host.'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.ContainersPaused
          master_item:
            key: docker.info
          tags:
            - tag: component
              value: containers
        - uuid: 949e697b4b0d43cc9eecf316f8a103a3
          name: 'Containers running'
          type: DEPENDENT
          key: docker.containers.running
          description: 'Total number of containers running on this host.'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.ContainersRunning
          master_item:
            key: docker.info
          tags:
            - tag: component
              value: containers
        - uuid: b4264fa597e94e83b7b47465061e90f7
          name: 'Containers stopped'
          type: DEPENDENT
          key: docker.containers.stopped
          description: 'Total number of containers stopped on this host.'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.ContainersStopped
          master_item:
            key: docker.info
          tags:
            - tag: component
              value: containers
        - uuid: 34603ed4c823449ba2ee946c8abe4b3d
          name: 'Containers total'
          type: DEPENDENT
          key: docker.containers.total
          description: 'Total number of containers on this host.'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.Containers
          master_item:
            key: docker.info
          tags:
            - tag: component
              value: containers
        - uuid: 27d1a7f30da443c5bd33563f2162f882
          name: 'Get data_usage'
          key: docker.data_usage
          history: '0'
          value_type: TEXT
          tags:
            - tag: component
              value: raw
        - uuid: e0d31decc6f04de59e7d4005a0fc875e
          name: 'Get images'
          key: docker.images
          history: '0'
          value_type: TEXT
          tags:
            - tag: component
              value: raw
        - uuid: 9ad02cc4f09e4aedb2492dacaffd517e
          name: 'Get info'
          key: docker.info
          history: '0'
          value_type: TEXT
          tags:
            - tag: component
              value: raw
        - uuid: 6c310dafcf904fc5a293fc75b444763e
          name: 'IPv4 Forwarding enabled'
          type: DEPENDENT
          key: docker.ipv4_forwarding.enabled
          valuemap:
            name: 'Docker flag'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.IPv4Forwarding
            - type: BOOL_TO_DECIMAL
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1d
          master_item:
            key: docker.info
          tags:
            - tag: component
              value: network
        - uuid: 1c8f238cc88d496fa5a96479c8d24347
          name: Name
          type: DEPENDENT
          key: docker.name
          history: 1h
          value_type: CHAR
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.Name
          master_item:
            key: docker.info
          tags:
            - tag: component
              value: system
          triggers:
            - uuid: be01ad0d03cf472a8025ce970e33f685
              expression: 'nodata(/Basic Docker Linux Metrics/docker.name,30m)=1'
              name: 'Failed to fetch info data'
              event_name: 'Failed to fetch info data (or no data for 30m)'
              priority: WARNING
              description: 'Zabbix has not received data for items for the last 30 minutes.'
              manual_close: 'YES'
              dependencies:
                - name: 'Service is down'
                  expression: 'last(/Basic Docker Linux Metrics/docker.ping)=0'
              tags:
                - tag: scope
                  value: availability
        - uuid: cbe1b17fefdb4cc7b2d7168f1a4a3bd1
          name: Ping
          key: docker.ping
          valuemap:
            name: 'Service state'
          preprocessing:
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 10m
          tags:
            - tag: component
              value: application
            - tag: component
              value: health
          triggers:
            - uuid: 2bee27981e57448ebf665756027f0b3a
              expression: 'last(/Basic Docker Linux Metrics/docker.ping)=0'
              name: 'Service is down'
              priority: HIGH
              manual_close: 'YES'
              tags:
                - tag: scope
                  value: availability
        - uuid: 71a5dca35a7e40b68033f3354a036adb
          name: 'Server version'
          type: DEPENDENT
          key: docker.server_version
          value_type: CHAR
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.ServerVersion
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1d
          master_item:
            key: docker.info
          tags:
            - tag: component
              value: application
          triggers:
            - uuid: c7d4238751494d028a3a7e9ade28fa99
              expression: 'last(/Basic Docker Linux Metrics/docker.server_version,#1)<>last(/Basic Docker Linux Metrics/docker.server_version,#2) and length(last(/Basic Docker Linux Metrics/docker.server_version))>0'
              name: 'Version has changed'
              event_name: 'Version has changed (new version: {ITEM.VALUE})'
              priority: INFO
              description: 'Docker version has changed. Acknowledge to close the problem manually.'
              manual_close: 'YES'
              tags:
                - tag: scope
                  value: notice
      discovery_rules:
        - uuid: 22d035c1a463454db106f0f079b39784
          name: 'Containers discovery'
          key: 'docker.containers.discovery[false]'
          delay: 15m
          filter:
            evaltype: AND
            conditions:
              - macro: '{#NAME}'
                value: '{$DOCKER.LLD.FILTER.CONTAINER.MATCHES}'
              - macro: '{#NAME}'
                value: '{$DOCKER.LLD.FILTER.CONTAINER.NOT_MATCHES}'
                operator: NOT_MATCHES_REGEX
          description: |
            Discovery of containers metrics.
            
            Parameter:
            true  - Returns all containers
            false - Returns only running containers
          item_prototypes:
            - uuid: a9d6f6dd997a4de0985ece076b18de77
              name: 'Container {#NAME}: Created'
              type: DEPENDENT
              key: 'docker.container_info.created["{#NAME}"]'
              units: unixtime
              valuemap:
                name: 'Docker date format'
              preprocessing:
                - type: JAVASCRIPT
                  parameters:
                    - |
                      var input = JSON.parse(value);
                        return truncatedTimestamp = Math.floor(Date.parse(input.Created) / 1000) || -1;
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1d
              master_item:
                key: 'docker.container_info["{#NAME}",full]'
              tags:
                - tag: component
                  value: system
                - tag: container
                  value: '{#NAME}'
            - uuid: bbd7625f24834550979e170b3be87836
              name: 'Container {#NAME}: Finished at'
              type: DEPENDENT
              key: 'docker.container_info.finished["{#NAME}"]'
              value_type: FLOAT
              units: unixtime
              description: 'Time at which the container last terminated.'
              valuemap:
                name: 'Docker date format'
              preprocessing:
                - type: JAVASCRIPT
                  parameters:
                    - |
                      var input = JSON.parse(value);
                        return truncatedTimestamp = Math.floor(Date.parse(input.State.FinishedAt) / 1000) || -1;
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1d
              master_item:
                key: 'docker.container_info["{#NAME}",full]'
              tags:
                - tag: component
                  value: system
                - tag: container
                  value: '{#NAME}'
            - uuid: 7419196592384bc2a304cec7a859548a
              name: 'Container {#NAME}: Image'
              type: DEPENDENT
              key: 'docker.container_info.image["{#NAME}"]'
              value_type: CHAR
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.Names[0] == "{#NAME}")].Image.first()'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1d
              master_item:
                key: docker.containers
              tags:
                - tag: component
                  value: images
                - tag: container
                  value: '{#NAME}'
            - uuid: e1decc318df649eca0a25f6d671ee125
              name: 'Container {#NAME}: Restart count'
              type: DEPENDENT
              key: 'docker.container_info.restart_count["{#NAME}"]'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.RestartCount
              master_item:
                key: 'docker.container_info["{#NAME}",full]'
              tags:
                - tag: component
                  value: system
                - tag: container
                  value: '{#NAME}'
            - uuid: 4621ebe8e4aa44f0a27ad03aab857b3d
              name: 'Container {#NAME}: Started at'
              type: DEPENDENT
              key: 'docker.container_info.started["{#NAME}"]'
              value_type: FLOAT
              units: unixtime
              valuemap:
                name: 'Docker date format'
              preprocessing:
                - type: JAVASCRIPT
                  parameters:
                    - |
                      var input = JSON.parse(value);
                        return truncatedTimestamp = Math.floor(Date.parse(input.State.StartedAt) / 1000) || -1;
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1d
              master_item:
                key: 'docker.container_info["{#NAME}",full]'
              tags:
                - tag: component
                  value: system
                - tag: container
                  value: '{#NAME}'
            - uuid: a30e1ccd0bc740a98f36e6290a392faa
              name: 'Container {#NAME}: Dead'
              type: DEPENDENT
              key: 'docker.container_info.state.dead["{#NAME}"]'
              valuemap:
                name: 'Docker flag'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.State.Dead
                - type: BOOL_TO_DECIMAL
              master_item:
                key: 'docker.container_info["{#NAME}",full]'
              tags:
                - tag: component
                  value: system
                - tag: container
                  value: '{#NAME}'
            - uuid: 72b6c0e56fa1452f861d5e7b6a0434a9
              name: 'Container {#NAME}: Error'
              type: DEPENDENT
              key: 'docker.container_info.state.error["{#NAME}"]'
              value_type: CHAR
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.State.Error
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1d
              master_item:
                key: 'docker.container_info["{#NAME}",full]'
              tags:
                - tag: component
                  value: system
                - tag: container
                  value: '{#NAME}'
              trigger_prototypes:
                - uuid: 731f84ac969e4236a3eed519f83f94d4
                  expression: 'last(/Basic Docker Linux Metrics/docker.container_info.state.error["{#NAME}"],#1)<>last(/Basic Docker Linux Metrics/docker.container_info.state.error["{#NAME}"],#2) and length(last(/Basic Docker Linux Metrics/docker.container_info.state.error["{#NAME}"]))>0'
                  name: 'Container {#NAME}: An error has occurred in the container'
                  event_name: 'Container {#NAME}: Version has changed (new version: {ITEM.VALUE})'
                  priority: WARNING
                  description: 'Container {#NAME} has an error. Acknowledge to close the problem manually.'
                  manual_close: 'YES'
                  tags:
                    - tag: scope
                      value: notice
            - uuid: ac7387555c5346fbb52d3d1cc90bdd7b
              name: 'Container {#NAME}: Exit code'
              type: DEPENDENT
              key: 'docker.container_info.state.exitcode["{#NAME}"]'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.State.ExitCode
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1d
              master_item:
                key: 'docker.container_info["{#NAME}",full]'
              tags:
                - tag: component
                  value: system
                - tag: container
                  value: '{#NAME}'
            - uuid: 8473c56667cf4c4e9e472bbfaeede25a
              name: 'Container {#NAME}: Health failing streak'
              type: DEPENDENT
              key: 'docker.container_info.state.health.failing["{#NAME}"]'
              value_type: FLOAT
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.State.Health.FailingStreak
                  error_handler: DISCARD_VALUE
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: 'docker.container_info["{#NAME}",full]'
              tags:
                - tag: component
                  value: system
                - tag: container
                  value: '{#NAME}'
            - uuid: bb00a6ae2e694345ae1340504b482242
              name: 'Container {#NAME}: Health status'
              type: DEPENDENT
              key: 'docker.container_info.state.health["{#NAME}"]'
              value_type: FLOAT
              description: 'Container''s `HEALTHCHECK`.'
              valuemap:
                name: 'Docker container health state'
              preprocessing:
                - type: JAVASCRIPT
                  parameters:
                    - |
                      var input = JSON.parse(value);
                      if (typeof input.State.Health !== 'object' || typeof input.State.Health === 'undefined') {
                        return 4;
                      }
                        return (['starting', 'unhealthy', 'healthy', 'none'].indexOf(input.State.Health.Status) + 1);
                - type: IN_RANGE
                  parameters:
                    - '1'
                    - '4'
                  error_handler: CUSTOM_VALUE
                  error_handler_params: '4'
              master_item:
                key: 'docker.container_info["{#NAME}",full]'
              tags:
                - tag: component
                  value: system
                - tag: container
                  value: '{#NAME}'
              trigger_prototypes:
                - uuid: 8da85db1890f40fe8342d303c67a60bd
                  expression: 'count(/Basic Docker Linux Metrics/docker.container_info.state.health["{#NAME}"],2m,,2)>=2'
                  name: 'Container {#NAME}: Health state container is unhealthy'
                  opdata: '{ITEM.LASTVALUE1}'
                  priority: HIGH
                  description: 'Container health state is unhealthy.'
                  tags:
                    - tag: scope
                      value: availability
            - uuid: 38c808ba727a406daa09f74a083e4e33
              name: 'Container {#NAME}: OOMKilled'
              type: DEPENDENT
              key: 'docker.container_info.state.oomkilled["{#NAME}"]'
              valuemap:
                name: 'Docker flag'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.State.OOMKilled
                - type: BOOL_TO_DECIMAL
              master_item:
                key: 'docker.container_info["{#NAME}",full]'
              tags:
                - tag: component
                  value: system
                - tag: container
                  value: '{#NAME}'
            - uuid: 3efef2dd8a4048b3b25fb2e3cc8c9d63
              name: 'Container {#NAME}: Paused'
              type: DEPENDENT
              key: 'docker.container_info.state.paused["{#NAME}"]'
              valuemap:
                name: 'Docker flag'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.State.Paused
                - type: BOOL_TO_DECIMAL
              master_item:
                key: 'docker.container_info["{#NAME}",full]'
              tags:
                - tag: component
                  value: system
                - tag: container
                  value: '{#NAME}'
            - uuid: 237bc2836bab4672b214854d14dfc983
              name: 'Container {#NAME}: Pid'
              type: DEPENDENT
              key: 'docker.container_info.state.pid["{#NAME}"]'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.State.Pid
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1d
              master_item:
                key: 'docker.container_info["{#NAME}",full]'
              tags:
                - tag: component
                  value: system
                - tag: container
                  value: '{#NAME}'
            - uuid: 8632d82f040443d7bfe2035f850264df
              name: 'Container {#NAME}: Restarting'
              type: DEPENDENT
              key: 'docker.container_info.state.restarting["{#NAME}"]'
              valuemap:
                name: 'Docker flag'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.State.Restarting
                - type: BOOL_TO_DECIMAL
              master_item:
                key: 'docker.container_info["{#NAME}",full]'
              tags:
                - tag: component
                  value: system
                - tag: container
                  value: '{#NAME}'
            - uuid: 786e067266114b8f806c64b9fe2a5eb6
              name: 'Container {#NAME}: Running'
              type: DEPENDENT
              key: 'docker.container_info.state.running["{#NAME}"]'
              valuemap:
                name: 'Docker flag'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.State.Running
                - type: BOOL_TO_DECIMAL
              master_item:
                key: 'docker.container_info["{#NAME}",full]'
              tags:
                - tag: component
                  value: system
                - tag: container
                  value: '{#NAME}'
            - uuid: c1d2ee2d8db0420285435560311bfb07
              name: 'Container {#NAME}: Status'
              type: DEPENDENT
              key: 'docker.container_info.state.status["{#NAME}"]'
              value_type: CHAR
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.State.Status
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: 'docker.container_info["{#NAME}",full]'
              tags:
                - tag: component
                  value: system
                - tag: container
                  value: '{#NAME}'
            - uuid: 9288234840454ba0955c0bdb88a849c8
              name: 'Container {#NAME}: Get info'
              key: 'docker.container_info["{#NAME}",full]'
              history: '0'
              value_type: CHAR
              description: 'Return low-level information about a container.'
              tags:
                - tag: component
                  value: raw
                - tag: container
                  value: '{#NAME}'
            - uuid: 8671df44f83847a89a2173a8febb8581
              name: 'Container {#NAME}: CPU percent usage'
              type: DEPENDENT
              key: 'docker.container_stats.cpu_pct_usage["{#NAME}"]'
              value_type: FLOAT
              units: '%'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.cpu_stats.cpu_usage.percent_usage
              master_item:
                key: 'docker.container_stats["{#NAME}"]'
              tags:
                - tag: component
                  value: cpu
                - tag: container
                  value: '{#NAME}'
            - uuid: 3c00736cb5d94e148e5b2455943deae4
              name: 'Container {#NAME}: CPU kernelmode usage per second'
              type: DEPENDENT
              key: 'docker.container_stats.cpu_usage.kernel.rate["{#NAME}"]'
              value_type: FLOAT
              units: s
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.cpu_stats.cpu_usage.usage_in_kernelmode
                - type: CHANGE_PER_SECOND
                - type: MULTIPLIER
                  parameters:
                    - '1.0E-9'
              master_item:
                key: 'docker.container_stats["{#NAME}"]'
              tags:
                - tag: component
                  value: cpu
                - tag: container
                  value: '{#NAME}'
            - uuid: befb0bad2fac4209a59af38c58e425cf
              name: 'Container {#NAME}: Throttled periods'
              type: DEPENDENT
              key: 'docker.container_stats.cpu_usage.throttled_periods["{#NAME}"]'
              description: 'Number of periods when the container hits its throttling limit.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.cpu_stats.throttling_data.throttled_periods
              master_item:
                key: 'docker.container_stats["{#NAME}"]'
              tags:
                - tag: component
                  value: cpu
                - tag: container
                  value: '{#NAME}'
            - uuid: 8a63d95bc23c469687d19915cbf2b204
              name: 'Container {#NAME}: Throttled time'
              type: DEPENDENT
              key: 'docker.container_stats.cpu_usage.throttled_time["{#NAME}"]'
              value_type: FLOAT
              units: s
              description: 'Aggregate time the container was throttled for in nanoseconds.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.cpu_stats.throttling_data.throttled_time
                - type: MULTIPLIER
                  parameters:
                    - '1.0E-9'
              master_item:
                key: 'docker.container_stats["{#NAME}"]'
              tags:
                - tag: component
                  value: cpu
                - tag: container
                  value: '{#NAME}'
            - uuid: f1037f9d46f24467abe30c2e1161549f
              name: 'Container {#NAME}: Throttling periods'
              type: DEPENDENT
              key: 'docker.container_stats.cpu_usage.throttling_periods["{#NAME}"]'
              description: 'Number of periods with throttling active.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.cpu_stats.throttling_data.periods
              master_item:
                key: 'docker.container_stats["{#NAME}"]'
              tags:
                - tag: component
                  value: cpu
                - tag: container
                  value: '{#NAME}'
            - uuid: f72fd529ec194b5bb2a4354a56e5882c
              name: 'Container {#NAME}: CPU total usage per second'
              type: DEPENDENT
              key: 'docker.container_stats.cpu_usage.total.rate["{#NAME}"]'
              value_type: FLOAT
              units: s
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.cpu_stats.cpu_usage.total_usage
                - type: CHANGE_PER_SECOND
                - type: MULTIPLIER
                  parameters:
                    - '1.0E-9'
              master_item:
                key: 'docker.container_stats["{#NAME}"]'
              tags:
                - tag: component
                  value: cpu
                - tag: container
                  value: '{#NAME}'
            - uuid: fac49c3ed6214271b7f958d8b7362f3d
              name: 'Container {#NAME}: CPU usermode usage per second'
              type: DEPENDENT
              key: 'docker.container_stats.cpu_usage.user.rate["{#NAME}"]'
              value_type: FLOAT
              units: s
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.cpu_stats.cpu_usage.usage_in_usermode
                - type: CHANGE_PER_SECOND
                - type: MULTIPLIER
                  parameters:
                    - '1.0E-9'
              master_item:
                key: 'docker.container_stats["{#NAME}"]'
              tags:
                - tag: component
                  value: cpu
                - tag: container
                  value: '{#NAME}'
            - uuid: 29b05a731efd4a16b7b0f3ae69b572e6
              name: 'Container {#NAME}: Memory commit bytes'
              type: DEPENDENT
              key: 'docker.container_stats.memory.commit_bytes["{#NAME}"]'
              units: B
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.memory_stats.commitbytes
              master_item:
                key: 'docker.container_stats["{#NAME}"]'
              tags:
                - tag: component
                  value: memory
                - tag: container
                  value: '{#NAME}'
            - uuid: 1369824a28224d3a958537a74f2d0989
              name: 'Container {#NAME}: Memory commit peak bytes'
              type: DEPENDENT
              key: 'docker.container_stats.memory.commit_peak_bytes["{#NAME}"]'
              units: B
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.memory_stats.commitpeakbytes
              master_item:
                key: 'docker.container_stats["{#NAME}"]'
              tags:
                - tag: component
                  value: memory
                - tag: container
                  value: '{#NAME}'
            - uuid: 58c313b447ca4adebc497d0b7f7be1a0
              name: 'Container {#NAME}: Memory maximum usage'
              type: DEPENDENT
              key: 'docker.container_stats.memory.max_usage["{#NAME}"]'
              units: B
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.memory_stats.max_usage
              master_item:
                key: 'docker.container_stats["{#NAME}"]'
              tags:
                - tag: component
                  value: memory
                - tag: container
                  value: '{#NAME}'
            - uuid: efce8448526e42a5a28e3e54cf3e88d9
              name: 'Container {#NAME}: Memory private working set'
              type: DEPENDENT
              key: 'docker.container_stats.memory.private_working_set["{#NAME}"]'
              units: B
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.memory_stats.privateworkingset
              master_item:
                key: 'docker.container_stats["{#NAME}"]'
              tags:
                - tag: component
                  value: memory
                - tag: container
                  value: '{#NAME}'
            - uuid: 777828f9a1984cca8b794f7bde4200dd
              name: 'Container {#NAME}: Memory usage'
              type: DEPENDENT
              key: 'docker.container_stats.memory.usage["{#NAME}"]'
              units: B
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.memory_stats.usage
              master_item:
                key: 'docker.container_stats["{#NAME}"]'
              tags:
                - tag: component
                  value: memory
                - tag: container
                  value: '{#NAME}'
            - uuid: 8a46108a21364472bfad3bdc2529d679
              name: 'Container {#NAME}: Online CPUs'
              type: DEPENDENT
              key: 'docker.container_stats.online_cpus["{#NAME}"]'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.cpu_stats.online_cpus
              master_item:
                key: 'docker.container_stats["{#NAME}"]'
              tags:
                - tag: component
                  value: cpu
                - tag: container
                  value: '{#NAME}'
            - uuid: 193011f491934e828e33a730eee6a536
              name: 'Container {#NAME}: Current PIDs count'
              type: DEPENDENT
              key: 'docker.container_stats.pids_stats.current["{#NAME}"]'
              description: 'Current number of PIDs the container has created.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.pids_stats.current
              master_item:
                key: 'docker.container_stats["{#NAME}"]'
              tags:
                - tag: component
                  value: system
                - tag: container
                  value: '{#NAME}'
            - uuid: 8d76ff89acc745c18361c12d1a6e0af7
              name: 'Container {#NAME}: Get stats'
              key: 'docker.container_stats["{#NAME}"]'
              history: '0'
              value_type: CHAR
              description: 'Get container stats based on resource usage.'
              tags:
                - tag: component
                  value: raw
                - tag: container
                  value: '{#NAME}'
            - uuid: 152eb5613bac4678b1f55cf843ddc0e5
              name: 'Container {#NAME}: Networks bytes received per second'
              type: DEPENDENT
              key: 'docker.networks.rx_bytes["{#NAME}"]'
              value_type: FLOAT
              units: B
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.networks[*].rx_bytes.sum()'
                  error_handler: CUSTOM_VALUE
                  error_handler_params: '0'
                - type: CHANGE_PER_SECOND
              master_item:
                key: 'docker.container_stats["{#NAME}"]'
              tags:
                - tag: component
                  value: network
                - tag: container
                  value: '{#NAME}'
            - uuid: 2de8d5ace2054c4facc3eef26f171d2e
              name: 'Container {#NAME}: Networks incoming packets dropped per second'
              type: DEPENDENT
              key: 'docker.networks.rx_dropped["{#NAME}"]'
              value_type: FLOAT
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.networks[*].rx_dropped.sum()'
                  error_handler: CUSTOM_VALUE
                  error_handler_params: '0'
                - type: CHANGE_PER_SECOND
              master_item:
                key: 'docker.container_stats["{#NAME}"]'
              tags:
                - tag: component
                  value: network
                - tag: container
                  value: '{#NAME}'
            - uuid: 534bd384569e43be81a3508dda8f4aec
              name: 'Container {#NAME}: Networks errors received per second'
              type: DEPENDENT
              key: 'docker.networks.rx_errors["{#NAME}"]'
              value_type: FLOAT
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.networks[*].rx_errors.sum()'
                  error_handler: CUSTOM_VALUE
                  error_handler_params: '0'
                - type: CHANGE_PER_SECOND
              master_item:
                key: 'docker.container_stats["{#NAME}"]'
              tags:
                - tag: component
                  value: network
                - tag: container
                  value: '{#NAME}'
            - uuid: bfe36a50c5f94b3892617d1d3cae7e83
              name: 'Container {#NAME}: Networks packets received per second'
              type: DEPENDENT
              key: 'docker.networks.rx_packets["{#NAME}"]'
              value_type: FLOAT
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.networks[*].rx_packets.sum()'
                  error_handler: CUSTOM_VALUE
                  error_handler_params: '0'
                - type: CHANGE_PER_SECOND
              master_item:
                key: 'docker.container_stats["{#NAME}"]'
              tags:
                - tag: component
                  value: network
                - tag: container
                  value: '{#NAME}'
            - uuid: ca8bb48017ef4e73a9153416bf7cfcd3
              name: 'Container {#NAME}: Networks bytes sent per second'
              type: DEPENDENT
              key: 'docker.networks.tx_bytes["{#NAME}"]'
              value_type: FLOAT
              units: B
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.networks[*].tx_bytes.sum()'
                  error_handler: CUSTOM_VALUE
                  error_handler_params: '0'
                - type: CHANGE_PER_SECOND
              master_item:
                key: 'docker.container_stats["{#NAME}"]'
              tags:
                - tag: component
                  value: network
                - tag: container
                  value: '{#NAME}'
            - uuid: df39b0e1eda64b12a67e506810d071da
              name: 'Container {#NAME}: Networks outgoing packets dropped per second'
              type: DEPENDENT
              key: 'docker.networks.tx_dropped["{#NAME}"]'
              value_type: FLOAT
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.networks[*].tx_dropped.sum()'
                  error_handler: CUSTOM_VALUE
                  error_handler_params: '0'
                - type: CHANGE_PER_SECOND
              master_item:
                key: 'docker.container_stats["{#NAME}"]'
              tags:
                - tag: component
                  value: network
                - tag: container
                  value: '{#NAME}'
            - uuid: 6f35ea5f00254df0a36f910aa5a1a4d8
              name: 'Container {#NAME}: Networks errors sent per second'
              type: DEPENDENT
              key: 'docker.networks.tx_errors["{#NAME}"]'
              value_type: FLOAT
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.networks[*].tx_errors.sum()'
                  error_handler: CUSTOM_VALUE
                  error_handler_params: '0'
                - type: CHANGE_PER_SECOND
              master_item:
                key: 'docker.container_stats["{#NAME}"]'
              tags:
                - tag: component
                  value: network
                - tag: container
                  value: '{#NAME}'
            - uuid: f77792dece534564a685131c65a123c3
              name: 'Container {#NAME}: Networks packets sent per second'
              type: DEPENDENT
              key: 'docker.networks.tx_packets["{#NAME}"]'
              value_type: FLOAT
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.networks[*].tx_packets.sum()'
                  error_handler: CUSTOM_VALUE
                  error_handler_params: '0'
                - type: CHANGE_PER_SECOND
              master_item:
                key: 'docker.container_stats["{#NAME}"]'
              tags:
                - tag: component
                  value: network
                - tag: container
                  value: '{#NAME}'
          trigger_prototypes:
            - uuid: 3f61117ec6314840b5145d613de5ce87
              expression: 'last(/Basic Docker Linux Metrics/docker.container_info.state.exitcode["{#NAME}"])>0 and last(/Basic Docker Linux Metrics/docker.container_info.state.running["{#NAME}"])=0'
              name: 'Container {#NAME}: Container has been stopped with error code'
              opdata: 'Exit code: {ITEM.LASTVALUE1}'
              priority: AVERAGE
              manual_close: 'YES'
              tags:
                - tag: scope
                  value: availability
          graph_prototypes:
            - uuid: 0e06e72fe1b540ae838eedfdc1091355
              name: 'Container {#NAME}: CPU usage'
              type: STACKED
              graph_items:
                - drawtype: GRADIENT_LINE
                  color: 199C0D
                  item:
                    host: 'Basic Docker Linux Metrics'
                    key: 'docker.container_stats.cpu_usage.kernel.rate["{#NAME}"]'
                - sortorder: '1'
                  drawtype: GRADIENT_LINE
                  color: F63100
                  item:
                    host: 'Basic Docker Linux Metrics'
                    key: 'docker.container_stats.cpu_usage.user.rate["{#NAME}"]'
                - sortorder: '2'
                  drawtype: GRADIENT_LINE
                  color: 00611C
                  item:
                    host: 'Basic Docker Linux Metrics'
                    key: 'docker.container_stats.cpu_usage.total.rate["{#NAME}"]'
            - uuid: 2e1bb9a718674e9db45c61ab96efc844
              name: 'Container {#NAME}: Memory usage'
              graph_items:
                - drawtype: GRADIENT_LINE
                  color: 199C0D
                  item:
                    host: 'Basic Docker Linux Metrics'
                    key: 'docker.container_stats.memory.usage["{#NAME}"]'
                - sortorder: '1'
                  drawtype: GRADIENT_LINE
                  color: F63100
                  item:
                    host: 'Basic Docker Linux Metrics'
                    key: 'docker.container_stats.memory.max_usage["{#NAME}"]'
            - uuid: 3acb00eb87bd4733a767d56659d228c4
              name: 'Container {#NAME}: Network packets'
              graph_items:
                - drawtype: BOLD_LINE
                  color: 199C0D
                  item:
                    host: 'Basic Docker Linux Metrics'
                    key: 'docker.networks.rx_packets["{#NAME}"]'
                - sortorder: '1'
                  drawtype: BOLD_LINE
                  color: F63100
                  item:
                    host: 'Basic Docker Linux Metrics'
                    key: 'docker.networks.tx_packets["{#NAME}"]'
                - sortorder: '2'
                  drawtype: BOLD_LINE
                  color: 00611C
                  item:
                    host: 'Basic Docker Linux Metrics'
                    key: 'docker.networks.rx_errors["{#NAME}"]'
                - sortorder: '3'
                  drawtype: BOLD_LINE
                  color: F7941D
                  item:
                    host: 'Basic Docker Linux Metrics'
                    key: 'docker.networks.tx_errors["{#NAME}"]'
                - sortorder: '4'
                  drawtype: BOLD_LINE
                  color: FC6EA3
                  item:
                    host: 'Basic Docker Linux Metrics'
                    key: 'docker.networks.rx_dropped["{#NAME}"]'
                - sortorder: '5'
                  drawtype: BOLD_LINE
                  color: 6C59DC
                  item:
                    host: 'Basic Docker Linux Metrics'
                    key: 'docker.networks.tx_dropped["{#NAME}"]'
            - uuid: 196a9e1c9686433b87d06f4730c54309
              name: 'Container {#NAME}: Network traffic'
              graph_items:
                - drawtype: BOLD_LINE
                  color: 199C0D
                  item:
                    host: 'Basic Docker Linux Metrics'
                    key: 'docker.networks.rx_bytes["{#NAME}"]'
                - sortorder: '1'
                  drawtype: BOLD_LINE
                  color: F63100
                  item:
                    host: 'Basic Docker Linux Metrics'
                    key: 'docker.networks.tx_bytes["{#NAME}"]'
        - uuid: 0d0272b0c354475e8d12a1c68ce23fb1
          name: 'Images discovery'
          key: docker.images.discovery
          delay: 15m
          filter:
            evaltype: AND
            conditions:
              - macro: '{#NAME}'
                value: '{$DOCKER.LLD.FILTER.IMAGE.MATCHES}'
              - macro: '{#NAME}'
                value: '{$DOCKER.LLD.FILTER.IMAGE.NOT_MATCHES}'
                operator: NOT_MATCHES_REGEX
          description: 'Discovery of images metrics.'
          item_prototypes:
            - uuid: 46df23fee0fb4129a032a3d60c21bc1f
              name: 'Image {#NAME}: Created'
              type: DEPENDENT
              key: 'docker.image.created["{#ID}"]'
              units: unixtime
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.Id == "{#ID}")].Created.first()'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1d
              master_item:
                key: docker.images
              tags:
                - tag: component
                  value: system
                - tag: image
                  value: '{#NAME}'
            - uuid: c8195e2871b3481392ecdd4030f8842d
              name: 'Image {#NAME}: Size'
              type: DEPENDENT
              key: 'docker.image.size["{#ID}"]'
              units: B
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.Id == "{#ID}")].Size.first()'
              master_item:
                key: docker.images
              tags:
                - tag: component
                  value: storage
                - tag: image
                  value: '{#NAME}'
      tags:
        - tag: class
          value: software
        - tag: target
          value: docker
      macros:
        - macro: '{$DOCKER.LLD.FILTER.CONTAINER.MATCHES}'
          value: '.*'
          description: 'Filter of discoverable containers.'
        - macro: '{$DOCKER.LLD.FILTER.CONTAINER.NOT_MATCHES}'
          value: CHANGE_IF_NEEDED
          description: 'Filter to exclude discovered containers.'
        - macro: '{$DOCKER.LLD.FILTER.IMAGE.MATCHES}'
          value: '.*'
          description: 'Filter of discoverable images.'
        - macro: '{$DOCKER.LLD.FILTER.IMAGE.NOT_MATCHES}'
          value: CHANGE_IF_NEEDED
          description: 'Filter to exclude discovered images.'
      dashboards:
        - uuid: b19c91718e8d4d3aa0ffc715c3282e15
          name: 'Basic Docker Dashboard'
          pages:
            - widgets:
                - type: svggraph
                  name: 'Docker Service Status'
                  width: '36'
                  height: '5'
                  fields:
                    - type: INTEGER
                      name: ds.0.approximation
                      value: '7'
                    - type: STRING
                      name: ds.0.color
                      value: FF465C
                    - type: STRING
                      name: ds.0.data_set_label
                      value: Ping
                    - type: STRING
                      name: ds.0.items.0
                      value: Ping
                    - type: STRING
                      name: reference
                      value: CKUCL
                    - type: INTEGER
                      name: righty
                      value: '0'
                - type: item
                  name: 'Total Containers'
                  'y': '5'
                  width: '12'
                  height: '3'
                  fields:
                    - type: ITEM
                      name: itemid.0
                      value:
                        host: 'Basic Docker Linux Metrics'
                        key: docker.containers.total
                - type: item
                  name: 'Running Containers'
                  x: '12'
                  'y': '5'
                  width: '12'
                  height: '3'
                  fields:
                    - type: ITEM
                      name: itemid.0
                      value:
                        host: 'Basic Docker Linux Metrics'
                        key: docker.containers.running
                - type: item
                  name: 'Stop Containers'
                  x: '24'
                  'y': '5'
                  width: '12'
                  height: '3'
                  fields:
                    - type: ITEM
                      name: itemid.0
                      value:
                        host: 'Basic Docker Linux Metrics'
                        key: docker.containers.stopped
                - type: graphprototype
                  name: 'Container CPU Usage'
                  x: '36'
                  width: '29'
                  height: '5'
                  fields:
                    - type: INTEGER
                      name: columns
                      value: '1'
                    - type: GRAPH_PROTOTYPE
                      name: graphid.0
                      value:
                        host: 'Basic Docker Linux Metrics'
                        name: 'Container {#NAME}: CPU usage'
                    - type: STRING
                      name: reference
                      value: HRKBY
                - type: graphprototype
                  name: 'Container Memory Usage'
                  x: '36'
                  'y': '5'
                  width: '29'
                  height: '4'
                  fields:
                    - type: INTEGER
                      name: columns
                      value: '1'
                    - type: GRAPH_PROTOTYPE
                      name: graphid.0
                      value:
                        host: 'Basic Docker Linux Metrics'
                        name: 'Container {#NAME}: Memory usage'
                    - type: STRING
                      name: reference
                      value: DWREM
      valuemaps:
        - uuid: 46293035ebb04b22a29b453e0d91b712
          name: 'Docker container health state'
          mappings:
            - value: '1'
              newvalue: starting
            - value: '2'
              newvalue: unhealthy
            - value: '3'
              newvalue: healthy
            - value: '4'
              newvalue: none
        - uuid: d149615443334bbfa5ab6aad16e31d06
          name: 'Docker date format'
          mappings:
            - value: '-1'
              newvalue: 'Error parsing date'
            - value: '-62135596800'
              newvalue: 'Null time'
        - uuid: 41700ec3d1314c8996f4c61c7c28eba8
          name: 'Docker flag'
          mappings:
            - value: '0'
              newvalue: 'False'
            - value: '1'
              newvalue: 'True'
        - uuid: af24193982334ff986d5d96eaee95003
          name: 'Service state'
          mappings:
            - value: '0'
              newvalue: Down
            - value: '1'
              newvalue: Up
  graphs:
    - uuid: 637621948d444605884d838b18e5ea7e
      name: 'Docker: Containers'
      graph_items:
        - drawtype: GRADIENT_LINE
          color: 199C0D
          item:
            host: 'Basic Docker Linux Metrics'
            key: docker.containers.running
        - sortorder: '1'
          drawtype: BOLD_LINE
          color: F63100
          item:
            host: 'Basic Docker Linux Metrics'
            key: docker.containers.paused
        - sortorder: '2'
          drawtype: BOLD_LINE
          color: 00611C
          item:
            host: 'Basic Docker Linux Metrics'
            key: docker.containers.stopped
        - sortorder: '3'
          drawtype: BOLD_LINE
          color: F7941D
          item:
            host: 'Basic Docker Linux Metrics'
            key: docker.containers.total
